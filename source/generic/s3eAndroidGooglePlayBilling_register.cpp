/*
 * WARNING: this is an autogenerated file and will be overwritten by
 * the extension interface script.
 */
/*
 * This file contains the automatically generated loader-side
 * functions that form part of the extension.
 *
 * This file is awlays compiled into all loaders but compiles
 * to nothing if this extension is not enabled in the loader
 * at build time.
 */
#include "IwDebug.h"
#include "s3eAndroidGooglePlayBilling_autodefs.h"
#include "s3eEdk.h"
#include "s3eAndroidGooglePlayBilling.h"
//Declarations of Init and Term functions
extern s3eResult s3eAndroidGooglePlayBillingInit();
extern void s3eAndroidGooglePlayBillingTerminate();


// On platforms that use a seperate UI/OS thread we can autowrap functions
// here.   Note that we can't use the S3E_USE_OS_THREAD define since this
// code is oftern build standalone, outside the main loader build.
#if defined I3D_OS_IPHONE || defined I3D_OS_OSX || defined I3D_OS_LINUX || defined I3D_OS_WINDOWS

static void s3eAndroidGooglePlayBillingStart_wrap(const char* base64PublicKey)
{
    IwTrace(ANDROIDGOOGLEPLAYBILLING_VERBOSE, ("calling s3eAndroidGooglePlayBilling func on main thread: s3eAndroidGooglePlayBillingStart"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)s3eAndroidGooglePlayBillingStart, 1, base64PublicKey);
}

static void s3eAndroidGooglePlayBillingRequestPurchase_wrap(const char* productID, bool inApp, const char* developerPayLoad)
{
    IwTrace(ANDROIDGOOGLEPLAYBILLING_VERBOSE, ("calling s3eAndroidGooglePlayBilling func on main thread: s3eAndroidGooglePlayBillingRequestPurchase"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)s3eAndroidGooglePlayBillingRequestPurchase, 3, productID, inApp, developerPayLoad);
}

static void s3eAndroidGooglePlayBillingRequestProductInformation_wrap(const char** inAppProducts, int numInAppProducts, const char** subProducts, int numSubProducts)
{
    IwTrace(ANDROIDGOOGLEPLAYBILLING_VERBOSE, ("calling s3eAndroidGooglePlayBilling func on main thread: s3eAndroidGooglePlayBillingRequestProductInformation"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)s3eAndroidGooglePlayBillingRequestProductInformation, 4, inAppProducts, numInAppProducts, subProducts, numSubProducts);
}

static void s3eAndroidGooglePlayBillingRestoreTransactions_wrap()
{
    IwTrace(ANDROIDGOOGLEPLAYBILLING_VERBOSE, ("calling s3eAndroidGooglePlayBilling func on main thread: s3eAndroidGooglePlayBillingRestoreTransactions"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)s3eAndroidGooglePlayBillingRestoreTransactions, 0);
}

static void s3eAndroidGooglePlayBillingConsumeItem_wrap(const char* purchaseToken)
{
    IwTrace(ANDROIDGOOGLEPLAYBILLING_VERBOSE, ("calling s3eAndroidGooglePlayBilling func on main thread: s3eAndroidGooglePlayBillingConsumeItem"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)s3eAndroidGooglePlayBillingConsumeItem, 1, purchaseToken);
}

#define s3eAndroidGooglePlayBillingStart s3eAndroidGooglePlayBillingStart_wrap
#define s3eAndroidGooglePlayBillingRequestPurchase s3eAndroidGooglePlayBillingRequestPurchase_wrap
#define s3eAndroidGooglePlayBillingRequestProductInformation s3eAndroidGooglePlayBillingRequestProductInformation_wrap
#define s3eAndroidGooglePlayBillingRestoreTransactions s3eAndroidGooglePlayBillingRestoreTransactions_wrap
#define s3eAndroidGooglePlayBillingConsumeItem s3eAndroidGooglePlayBillingConsumeItem_wrap

#endif

s3eResult s3eAndroidGooglePlayBillingRegister(s3eAndroidGooglePlayBillingCallback cbid, s3eCallback fn, void* pData)
{
    return s3eEdkCallbacksRegister(S3E_EXT_ANDROIDGOOGLEPLAYBILLING_HASH, S3E_ANDROIDGOOGLEPLAYBILLING_CALLBACK_MAX, cbid, fn, pData, 0);
};

s3eResult s3eAndroidGooglePlayBillingUnRegister(s3eAndroidGooglePlayBillingCallback cbid, s3eCallback fn)
{
    return s3eEdkCallbacksUnRegister(S3E_EXT_ANDROIDGOOGLEPLAYBILLING_HASH, S3E_ANDROIDGOOGLEPLAYBILLING_CALLBACK_MAX, cbid, fn);
}

void s3eAndroidGooglePlayBillingRegisterExt()
{
    /* fill in the function pointer struct for this extension */
    void* funcPtrs[9];
    funcPtrs[0] = (void*)s3eAndroidGooglePlayBillingRegister;
    funcPtrs[1] = (void*)s3eAndroidGooglePlayBillingUnRegister;
    funcPtrs[2] = (void*)s3eAndroidGooglePlayBillingStart;
    funcPtrs[3] = (void*)s3eAndroidGooglePlayBillingStop;
    funcPtrs[4] = (void*)s3eAndroidGooglePlayBillingIsSupported;
    funcPtrs[5] = (void*)s3eAndroidGooglePlayBillingRequestPurchase;
    funcPtrs[6] = (void*)s3eAndroidGooglePlayBillingRequestProductInformation;
    funcPtrs[7] = (void*)s3eAndroidGooglePlayBillingRestoreTransactions;
    funcPtrs[8] = (void*)s3eAndroidGooglePlayBillingConsumeItem;

    /*
     * Flags that specify the extension's use of locking and stackswitching
     */
    int flags[9] = { 0 };

    /*
     * Register the extension
     */
s3eEdkRegister("s3eAndroidGooglePlayBilling", funcPtrs, sizeof(funcPtrs), flags, s3eAndroidGooglePlayBillingInit, s3eAndroidGooglePlayBillingTerminate, 0);
}

#if !defined S3E_BUILD_S3ELOADER

#if defined S3E_EDK_USE_STATIC_INIT_ARRAY
int s3eAndroidGooglePlayBillingStaticInit()
{
    void** p = g_StaticInitArray;
    void* end = p + g_StaticArrayLen;
    while (*p) p++;
    if (p < end)
        *p = (void*)&s3eAndroidGooglePlayBillingRegisterExt;
    return 0;
}

int g_s3eAndroidGooglePlayBillingVal = s3eAndroidGooglePlayBillingStaticInit();

#elif defined S3E_EDK_USE_DLLS
S3E_EXTERN_C S3E_DLL_EXPORT void RegisterExt()
{
    s3eAndroidGooglePlayBillingRegisterExt();
}
#endif

#endif
